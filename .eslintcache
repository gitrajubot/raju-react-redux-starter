[{"/home/aponiar/Desktop/raju-react-redux-starter/src/index.js":"1","/home/aponiar/Desktop/raju-react-redux-starter/src/App.js":"2","/home/aponiar/Desktop/raju-react-redux-starter/src/reportWebVitals.js":"3","/home/aponiar/Desktop/raju-react-redux-starter/src/router.js":"4","/home/aponiar/Desktop/raju-react-redux-starter/src/actions/GetConfigurationAction.js":"5","/home/aponiar/Desktop/raju-react-redux-starter/src/actions/types.js":"6","/home/aponiar/Desktop/raju-react-redux-starter/src/pages/loginSignupPage.js":"7","/home/aponiar/Desktop/raju-react-redux-starter/src/api-services/GetConfigurationApi.js":"8","/home/aponiar/Desktop/raju-react-redux-starter/src/services/sagaGenerator.service.js":"9","/home/aponiar/Desktop/raju-react-redux-starter/src/actions/AddPhoneNoAction.js":"10","/home/aponiar/Desktop/raju-react-redux-starter/src/actions/OtpVerificationAction.js":"11","/home/aponiar/Desktop/raju-react-redux-starter/src/pages/login.js":"12","/home/aponiar/Desktop/raju-react-redux-starter/src/pages/signUp.js":"13","/home/aponiar/Desktop/raju-react-redux-starter/src/actions/PasswordAction.js":"14","/home/aponiar/Desktop/raju-react-redux-starter/src/api-services/axios.service.js":"15","/home/aponiar/Desktop/raju-react-redux-starter/src/api-services/EndPoint.js":"16","/home/aponiar/Desktop/raju-react-redux-starter/src/store.js":"17","/home/aponiar/Desktop/raju-react-redux-starter/src/saga/watcher.js":"18","/home/aponiar/Desktop/raju-react-redux-starter/src/saga/index.js":"19","/home/aponiar/Desktop/raju-react-redux-starter/src/api-services/OtpVerificationApi.js":"20","/home/aponiar/Desktop/raju-react-redux-starter/src/api-services/AddPhoneNoApi.js":"21","/home/aponiar/Desktop/raju-react-redux-starter/src/actions/SocialLoginAction.js":"22","/home/aponiar/Desktop/raju-react-redux-starter/src/actions/LoginAction.js":"23","/home/aponiar/Desktop/raju-react-redux-starter/src/api-services/PasswordApi.js":"24","/home/aponiar/Desktop/raju-react-redux-starter/src/reducers/index.js":"25","/home/aponiar/Desktop/raju-react-redux-starter/src/api-services/SocialLoginApi.js":"26","/home/aponiar/Desktop/raju-react-redux-starter/src/api-services/LoginApi.js":"27","/home/aponiar/Desktop/raju-react-redux-starter/src/reducers/SocialLoginReducer.js":"28","/home/aponiar/Desktop/raju-react-redux-starter/src/reducers/AddPhoneNoReducer.js":"29","/home/aponiar/Desktop/raju-react-redux-starter/src/reducers/GetConfigurationReducer.js":"30","/home/aponiar/Desktop/raju-react-redux-starter/src/reducers/OtpVerificationReducer.js":"31","/home/aponiar/Desktop/raju-react-redux-starter/src/reducers/GetProfileReducer.js":"32","/home/aponiar/Desktop/raju-react-redux-starter/src/reducers/LogoutReducer.js":"33","/home/aponiar/Desktop/raju-react-redux-starter/src/reducers/PasswordReducer.js":"34","/home/aponiar/Desktop/raju-react-redux-starter/src/reducers/LoginReducer.js":"35","/home/aponiar/Desktop/raju-react-redux-starter/src/components/materialInput.js":"36","/home/aponiar/Desktop/raju-react-redux-starter/src/components/header.js":"37","/home/aponiar/Desktop/raju-react-redux-starter/src/actions/LogoutAction.js":"38","/home/aponiar/Desktop/raju-react-redux-starter/src/actions/GetProfileAction.js":"39","/home/aponiar/Desktop/raju-react-redux-starter/src/api-services/LogoutApi.js":"40","/home/aponiar/Desktop/raju-react-redux-starter/src/api-services/GetProfileApi.js":"41","/home/aponiar/Desktop/raju-react-redux-starter/src/constant.js":"42"},{"size":477,"mtime":1606314552045,"results":"43","hashOfConfig":"44"},{"size":1558,"mtime":1606314132346,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":1606303164358,"results":"46","hashOfConfig":"44"},{"size":400,"mtime":1606314351812,"results":"47","hashOfConfig":"44"},{"size":374,"mtime":1596034261974,"results":"48","hashOfConfig":"44"},{"size":764,"mtime":1601370674290,"results":"49","hashOfConfig":"44"},{"size":3707,"mtime":1606314223807,"results":"50","hashOfConfig":"44"},{"size":258,"mtime":1596034261974,"results":"51","hashOfConfig":"44"},{"size":1174,"mtime":1603110645010,"results":"52","hashOfConfig":"44"},{"size":358,"mtime":1596034261974,"results":"53","hashOfConfig":"44"},{"size":576,"mtime":1601396717798,"results":"54","hashOfConfig":"44"},{"size":11150,"mtime":1603362191556,"results":"55","hashOfConfig":"44"},{"size":18740,"mtime":1602671979274,"results":"56","hashOfConfig":"44"},{"size":819,"mtime":1596034261974,"results":"57","hashOfConfig":"44"},{"size":1422,"mtime":1603110644986,"results":"58","hashOfConfig":"44"},{"size":722,"mtime":1603267127250,"results":"59","hashOfConfig":"44"},{"size":547,"mtime":1596034262042,"results":"60","hashOfConfig":"44"},{"size":709,"mtime":1596034262042,"results":"61","hashOfConfig":"44"},{"size":189,"mtime":1596034262042,"results":"62","hashOfConfig":"44"},{"size":480,"mtime":1601396694234,"results":"63","hashOfConfig":"44"},{"size":279,"mtime":1596034261974,"results":"64","hashOfConfig":"44"},{"size":362,"mtime":1596034261974,"results":"65","hashOfConfig":"44"},{"size":511,"mtime":1596034261974,"results":"66","hashOfConfig":"44"},{"size":725,"mtime":1603110644986,"results":"67","hashOfConfig":"44"},{"size":723,"mtime":1602843151038,"results":"68","hashOfConfig":"44"},{"size":270,"mtime":1596034261974,"results":"69","hashOfConfig":"44"},{"size":461,"mtime":1596046349137,"results":"70","hashOfConfig":"44"},{"size":776,"mtime":1596034262042,"results":"71","hashOfConfig":"44"},{"size":769,"mtime":1596034262042,"results":"72","hashOfConfig":"44"},{"size":776,"mtime":1596034262042,"results":"73","hashOfConfig":"44"},{"size":1357,"mtime":1603110644998,"results":"74","hashOfConfig":"44"},{"size":1349,"mtime":1603110644998,"results":"75","hashOfConfig":"44"},{"size":723,"mtime":1596034262042,"results":"76","hashOfConfig":"44"},{"size":1814,"mtime":1596034262042,"results":"77","hashOfConfig":"44"},{"size":1166,"mtime":1596034262042,"results":"78","hashOfConfig":"44"},{"size":827,"mtime":1596034262042,"results":"79","hashOfConfig":"44"},{"size":4465,"mtime":1602678058607,"results":"80","hashOfConfig":"44"},{"size":330,"mtime":1596034261974,"results":"81","hashOfConfig":"44"},{"size":555,"mtime":1596034261974,"results":"82","hashOfConfig":"44"},{"size":267,"mtime":1596034261974,"results":"83","hashOfConfig":"44"},{"size":723,"mtime":1603110644986,"results":"84","hashOfConfig":"44"},{"size":315,"mtime":1596034262042,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"111x1sz",{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"91"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"91"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"110"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"91"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"91"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"91"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"91"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"91"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"91"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"91"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"91"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"91"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/aponiar/Desktop/raju-react-redux-starter/src/index.js",["188"],"/home/aponiar/Desktop/raju-react-redux-starter/src/App.js",["189"],"import React, {Component} from 'react';\nimport './App.scss';\n// import { ToastContainer, toast } from 'react-toastify';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport  Router  from './router'\nimport { connect } from 'react-redux';\nimport {GetConfigurationAction} from './actions/GetConfigurationAction';\n\n\n\nclass App extends Component {\n  constructor(props){\n    console.log('app consssssssssssssss', Router.prototype.state)\n    super(props);\n    this.ready = false;\n    this.router = new Router();\n    this.state={\n        // Routes: []\n    }\n    this.getConfigArr();\n}\n\ngetConfigArr(){\n  this.props.dispatch(GetConfigurationAction((res) => {\n    console.log('config response',res)\n    if(res){\n      this.ready = true;\n    }\n  }))\n}\n\n  render(){\n    {console.log('in renderrrrrrrrrrrrrrrrr')}\n    return (\n      this.ready ? \n      <div className=\"App\" >\n      \n        {/* <ToastContainer position=\"top-right\" autoClose={4000} style={{zIndex: 999999}} /> */}\n       \n        <BrowserRouter>\n          <div>\n          <Switch>\n              {this.router.routes.map(route => \n                route.redirectTo? \n                <Redirect key={route.path} to={route.redirectTo} /> : \n                <Route key={route.path} exact={route.exact} path={route.path} component={route.component} />\n                )\n              }\n            </Switch>\n          </div>\n        </BrowserRouter> \n      </div>  \n      : <></>\n    );\n  }\n  \n}\n\nconst mapStateToProps = state => state;\nexport default connect(mapStateToProps)(App);\n",["190","191"],"/home/aponiar/Desktop/raju-react-redux-starter/src/reportWebVitals.js",[],"/home/aponiar/Desktop/raju-react-redux-starter/src/router.js",[],"/home/aponiar/Desktop/raju-react-redux-starter/src/actions/GetConfigurationAction.js",[],"/home/aponiar/Desktop/raju-react-redux-starter/src/actions/types.js",[],"/home/aponiar/Desktop/raju-react-redux-starter/src/pages/loginSignupPage.js",["192","193","194","195","196","197"],"import React, { Component } from 'react';\nimport { Container, Row, Col, Button, Input, Card, CardTitle, CardSubtitle, CardBody } from 'reactstrap';\n\n\nimport Header from '../components/header';\n// import Login from './login'\n// import SignUp from './signUp'\n\nimport { connect } from 'react-redux';\n\nimport '../App.scss';\nimport './../scss/login.scss';\nimport '../Global.scss'\n\nclass LoginSignupPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fieldDetail: props.GetConfigurationReducer.configData.appConfig.inputSection,\n            buttonDetail: props.GetConfigurationReducer.configData.appConfig.buttonSection,\n            brandDetail: props.GetConfigurationReducer.configData.appConfig.brandSection,\n            tempDisplay: true,\n            isNext: false,\n            active: true,\n        }\n    }\n\n\n    render() {\n       \n        return (\n            <div className=\"w-100 h-100\">\n                <div className='mb-5 header'>\n                    <Header brandName={this.state.brandDetail}></Header>\n                </div>\n                <Row className=\"m-0 p-0\">\n                    <Col lg=\"6\" className=\"m-0 p-0 sidePart\">\n                        <div className=\" loginPageImage d-flex justify-content-center\">\n                            <div className=\"sideImageText\">\n                                <Container className=\"noBorder\">\n                                    <Row sm='12' className=\"d-flex justify-content-center\" >\n                                        <div className=\"title textBold text-left\">\n                                            {this.state.brandDetail.name}\n                                        </div>\n                                    </Row>\n                                    <Row sm='12' className=\"d-flex justify-content-center\">\n                                        <p className=\"subtitle text pr-3 text-left mt-3\">\n                                            Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs. The passage is attributed to an unknown typesetter in the 15th century who is thought to have scrambled parts of Cicero's De Finibus Bonorum et Malorum for use in a type specimen book.\n                                            The passage is attributed to an unknown typesetter in the 15th century who is thought to have scrambled parts of Cicero's De Finibus Bonorum et Malorum for use in a type specimen book.\n                                        </p>\n                                    </Row>\n                                </Container>\n                            </div>\n\n\n\n                        </div>\n                    </Col>\n                    <Col lg=\"6\" className='loginScroll mt-5' >\n\n                        <div className='d-flex ml-4 tabButton'>\n                            <div onClick={() => this.setState({ active: true })}\n                                className={`flex-grow-1 text-left text tabButtonFont mr-3 ${this.state.active ? 'textBold activeTab ' : 'text inActiveTab'}`}>Login</div>\n\n                            <div onClick={() => this.setState({ active: false })}\n                                className={`flex-grow-1 text-left text tabButtonFont ${!this.state.active ? 'textBold activeTab ' : 'text inActiveTab'}`}>Signup</div>\n                        </div>\n\n                        {/* {this.state.active ? <Login history={this.props.history}/> : <SignUp history={this.props.history}/>} */}\n\n                    </Col>\n                </Row>\n\n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = state => state\nexport default connect(mapStateToProps)(LoginSignupPage);\n","/home/aponiar/Desktop/raju-react-redux-starter/src/api-services/GetConfigurationApi.js",[],"/home/aponiar/Desktop/raju-react-redux-starter/src/services/sagaGenerator.service.js",["198","199","200"],"import { put, putResolve, call } from 'redux-saga/effects';\nimport { actionArr } from '../saga/watcher'\nimport { sagaMiddleware } from '../store';\nimport rootSaga from './../saga';\nimport store from './../store';\nimport { toast } from 'react-toastify';\n\n\n\nexport function GenerateSaga(actionType, apiService) {\n    if (!actionArr.filter(e => e.actionType === actionType).length) {\n        actionArr.push({\n            actionType: actionType, \n            sagaFunc: function* (payload) {\n                        try {\n                            const response = yield call(apiService, payload);\n                            store.runSaga(rootSaga);\n                            payload.callback && payload.callback(response);\n                            store.dispatch({ type: (actionType + '_SUCCESS'), response})\n                        } catch(error) {\n                            console.log('sagaErr', error)\n                            toast.error(error.response.data)\n                            store.dispatch({ type: (actionType + '_ERROR'), error: error.response  })\n                        }\n                    }\n        })\n        store.runSaga(rootSaga);\n    }\n}","/home/aponiar/Desktop/raju-react-redux-starter/src/actions/AddPhoneNoAction.js",[],["201","202"],"/home/aponiar/Desktop/raju-react-redux-starter/src/actions/OtpVerificationAction.js",[],"/home/aponiar/Desktop/raju-react-redux-starter/src/pages/login.js",["203","204","205","206","207","208","209","210","211","212","213"],"import React, { Component } from 'react';\nimport { Container, Row, Col, Button, Input } from 'reactstrap';\n\nimport MaterialInput from './../components/materialInput'\nimport { Google_Client_Id, Facebook_Id } from '../constant';\n\nimport { GoogleLogin } from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\n\nimport { SocialLoginAction } from './../actions/SocialLoginAction';\nimport { loginAction } from './../actions/LoginAction';\nimport { connect } from 'react-redux';\n\n\nimport '../App.scss';\nimport './../scss/login.scss';\n\nimport Router from './../router';\n\n\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    console.log('sign up constructor', props)\n    this.router = new Router();\n    this.state = {\n      tempDisplay: true,\n      displayIcon: \"fas fa-eye\",\n      otp_validation: props.GetConfigurationReducer.configData.appConfig.otpValidation,\n      urlValidation: props.GetConfigurationReducer.configData.urlValidation,\n      fieldDetail: props.GetConfigurationReducer.configData.appConfig.inputSection,\n      buttonDetail: props.GetConfigurationReducer.configData.appConfig.buttonSection,\n      brandDetail: props.GetConfigurationReducer.configData.appConfig.brandSection,\n    };\n  }\n\n  handleChange(event, name) {\n    this.setState({ [name]: event.target.value });\n  }\n\n\n  responseGoogle = (response) => {\n    // console.log('Google', response);\n    if (response.tokenId) {\n      this.setState({\n        tokenid: response.tokenId,\n      })\n      this.afterLogin(response.tokenId, 'Google')\n    }\n  }\n\n\n  responseFacebook = (response) => {\n    // console.log('facebook', response);\n    if (response.accessToken) {\n      this.setState({\n        accessToken: response.accessToken,\n        facebookId: response.id,\n      })\n      this.afterLogin(response.accessToken, 'Facebook')\n    }\n  }\n\n\n  afterLogin(data, type) {\n    data = {\n      providers: type,\n      accessToken: data,\n    }\n    this.props.dispatch(SocialLoginAction(data, (response) => {\n      // console.log(\"social log in response\", response);\n      if (response.user._id) {\n        localStorage.setItem('JWT', response.user.token);\n        this.setState({\n          UserId: response.user._id\n        }, () => {\n          if (this.state.fieldDetail.find((e) => (e.key === 'phoneNo'))) {\n            if (!response.user.phoneNo) {\n              this.props.history.push({ pathname: '/addPhoneNo', state: { userId: response.user._id } })\n            }\n            else {\n              if(this.state.otp_validation){\n                if(response.user.isValidate){\n                  localStorage.setItem('UserId', response.user._id)\n                  this.props.history.push(`/dashboard`)\n                }else{\n                  this.props.history.push({pathname: '/otpVerification', state: {userId: response.user._id, code: response.user.phoneNo.code, number: response.user.phoneNo.number}})\n                }\n              }\n             \n            }\n          }\n          else {\n            localStorage.setItem('UserId', response.user._id)\n            this.props.history.push(`/dashboard`)\n          }\n        })\n\n      }\n    }))\n  }\n\n  componentDidMount() {\n    const ifMail = this.state.fieldDetail.find((e) => e.key === 'email')\n    const ifPass = this.state.fieldDetail.find((e) => e.key === 'password')\n    if (ifMail) {\n      this.setState({\n        emailPattern: ifMail.regex && ifMail.regex,\n        mailMissmatch: ifMail.regxMsg && ifMail.regxMsg\n      })\n    }\n    if (ifPass) {\n      this.setState({\n        passwordPattern: ifPass.regex && ifPass.regex,\n        passMismatch: ifPass.regxMsg && ifPass.regxMsg\n      })\n    }\n  }\n\n\n  checkPattern(type, event) {\n    var mailpattern = this.state.emailPattern ? new RegExp(this.state.emailPattern) : null\n    var passpattern = this.state.passwordPattern ? new RegExp(this.state.passwordPattern) : null\n    if (type === 'mail') {\n      if (mailpattern && !mailpattern.test(event.target.value)) {\n        this.state.invalid = event.target.value ? true : false\n      }\n      else {\n        this.state.invalid = false\n      }\n    } else {\n      if (passpattern && !passpattern.test(event.target.value)) {\n        this.state.passinvalid = event.target.value ? true : false\n      }\n      else {\n        this.state.passinvalid = false\n      }\n    }\n  }\n\n\n  handleOnChange(type, event) {\n    if (type === 'mail') {\n      this.checkPattern(type, event)\n      this.setState({ email: event.target.value })\n    }\n    else {\n      this.checkPattern(type, event)\n      this.setState({ password: event.target.value })\n    }\n  }\n\n  toggleDisplay() {\n    this.setState({ tempDisplay: !this.state.tempDisplay })\n    if (!this.state.tempDisplay) {\n      this.setState({\n        displayIcon: \"fas fa-eye\"\n      })\n    }\n    else {\n      this.setState({\n        displayIcon: \"fas fa-eye-slash\"\n      })\n    }\n  }\n\n  onHandleLogin() {\n    if (this.state.email && this.state.password) {\n      const data = {\n        email: this.state && this.state.email,\n        password: this.state && this.state.password\n      };\n \n      this.props.dispatch(loginAction(data, (response) => {\n        // console.log(\"log in console\", response)\n        if (response.success) {\n          localStorage.setItem('JWT', response.user.token);\n          if(this.state.otp_validation){\n            if(response.user.isValidate){\n              localStorage.setItem('UserId', response.user._id);\n              this.props.history.push(`/dashboard`);\n            }else{\n              if(response.user.phoneNo){\n                this.props.history.push({pathname: '/otpVerification', state: {userId: response.user._id, code: response.user.phoneNo.code, number: response.user.phoneNo.number}})\n              }\n              else if(this.state.urlValidation){\n                  alert('Verification link send to your E-mail')\n              }\n              else{\n                this.props.history.push({pathname: '/otpVerification', state: {userId: response.user._id, iseMailOtp: true, mail: response.user.email}})\n              }\n\n            }\n          }else{\n            localStorage.setItem('UserId', response.user._id);\n            this.props.history.push(`/dashboard`);\n          }\n          \n        } else {\n          alert(\"wrong login credential\")\n        }\n      }\n      ));\n    }\n  };\n\n  componentWillReceiveProps(props) {\n    this.setState({ loginLoading: props.LoginReducer.loginLoading });\n  }\n\n  forgetPassword(){\n    this.props.history.push(`/forgetPassword`)\n  }\n\n  render() {\n    return (\n      <div className=\"w-100\">\n        {this.props.GetConfigurationReducer.configData.appConfig &&\n          <div className='pt-3 pb-4'>\n            <Container>\n              <div>\n                <div className='inputBlock'>\n                  <MaterialInput\n                    className=\"textInput text pl-3\"\n                    type={'text'}\n                    content={'Email'}\n                    onChange={(event) => this.handleOnChange('mail', event)}\n                  />\n                  {this.state.invalid && <span className=\"position-absolute invalidEmail text pl-3\">{this.state.mailMissmatch ? this.state.mailMissmatch : 'invalid input'}</span>}\n\n                </div>\n\n                <div className='inputBlock'>\n                  <div className='d-flex flex-row textInput text'>\n                    <MaterialInput\n                      className='d-flex flex-grow-1 pl-3'\n                      type={!this.state.tempDisplay ? \"text\" : \"password\"}\n                      content={'Password'}\n                      onChange={(event) => this.handleOnChange('pass', event)}\n                    />\n                    <Button color='' onClick={() => this.toggleDisplay()}>\n                      <i class={this.state.displayIcon}></i>\n                    </Button>\n                  </div>\n                  {/* {this.state.passinvalid && <span className=\"position-absolute invalidEmail text ml-3\">{this.state.passMismatch ? this.state.passMismatch : 'invalid input'}</span>} */}\n                </div>\n\n              </div>\n\n\n              <div className=\"Next mb-5 mr-2 mt-2\">\n                <div className=\"float-right\"><a className=\"text\"  href=\"javascript:void(0);\" onClick={() => this.forgetPassword()}>Forgot Password ?</a> </div>\n              </div>\n              <div className=\"Next mt-5\">\n                <Button disabled={!(this.state.email && this.state.password && !this.state.invalid)} className='mt-2'\n                  style={{ borderRadius: this.state.buttonDetail.borderRadis, backgroundColor: this.state.buttonDetail.btnClr, borderWidth: 3, borderColor: 'white', width: '100%', height: '55px' }} onClick={() => this.onHandleLogin()}>\n                  {!this.state.loginLoading ? <strong color={this.state.buttonDetail.btntxtClr}>Login</strong>\n                    : <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>}\n                </Button>\n              </div>\n\n              <div className='mt-5'>\n                <div>\n                  <GoogleLogin\n                    clientId={Google_Client_Id}\n                    render={renderProps => (\n                      <Button color='' className=\"mb-3\" onClick={() => renderProps.onClick()}\n                        style={{ backgroundColor: '#dc4040', borderRadius: this.state.buttonDetail.borderRadis, alignItems: 'center', height: '50px', justifyContent: 'center', alignSelf: 'center', flexDirection: 'row', width: '100%' }}>\n                        <img src={require('../assets/google-logo.png')} className='buttonImage' />\n                        <span className=\"text buttonText textBold\">Login With Google</span>\n                      </Button>\n                    )}\n                    buttonText=\"Login\"\n                    onSuccess={this.responseGoogle}\n                    onFailure={this.responseGoogle}\n                    cookiePolicy={'single_host_origin'}\n                  />\n                </div>\n                <div className='d-flex justify-content-center align-items-center'>\n                  OR\n              </div>\n                <div>\n                  <FacebookLogin\n                    appId={Facebook_Id}\n                    callback={this.responseFacebook}\n                    render={renderProps => (\n                      <Button color='' className=\"mt-3\" onClick={() => renderProps.onClick()}\n                        style={{ borderRadius: this.state.buttonDetail.borderRadis, backgroundColor: 'rgb(2, 2, 238)', alignItems: 'center', height: '50px', justifyContent: 'center', flexDirection: 'row', width: '100%' }}>\n                        <img src={require('../assets/facebook-logo.png')}\n                          className='buttonImage' />\n                        <span className=\"text buttonText textBold\">Login With Facebook</span>\n                      </Button>\n                    )}\n                  />\n                </div>\n\n              </div>\n\n\n            </Container>\n\n          </div>\n        }\n      </div>\n    );\n  }\n\n}\n\n\nconst mapStateToProps = state => state;\nexport default connect(mapStateToProps)(Login);","/home/aponiar/Desktop/raju-react-redux-starter/src/pages/signUp.js",["214","215","216","217","218","219","220","221","222"],"import React, { Component } from 'react';\nimport { Container, Row, Col, Button, Input } from 'reactstrap';\n\nimport MaterialInput from './../components/materialInput'\nimport { Google_Client_Id, Facebook_Id } from '../constant';\n\nimport { GoogleLogin } from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\nimport swal from '@sweetalert/with-react'\nimport { toast } from 'react-toastify';\n\nimport { SocialLoginAction } from './../actions/SocialLoginAction'\nimport { OtpVerificationAction } from './../actions/OtpVerificationAction'\nimport { signUpAction } from '../actions/LoginAction';\n\nimport { connect } from 'react-redux';\nimport CountryList from './../assets/countries.json';\n\nimport '../App.scss';\nimport './../scss/login.scss';\nimport '../Global.scss'\n\n\nclass SignUp extends Component {\n\n    constructor(props) {\n        super(props);\n        console.log('sign up constructorrrrrrrrrrrrr', props.GetConfigurationReducer.configData)\n        this.state = {\n            iconToggle: false,\n            otp_validation: props.GetConfigurationReducer.configData.appConfig.otpValidation,\n            urlValidation: props.GetConfigurationReducer.configData.urlValidation,\n            fieldDetail: props.GetConfigurationReducer.configData.appConfig.inputSection,\n            buttonDetail: props.GetConfigurationReducer.configData.appConfig.buttonSection,\n            brandDetail: props.GetConfigurationReducer.configData.appConfig.brandSection,\n            data: {},\n            mobile: {},\n            PhoneNoCode:false\n        };\n    }\n\n\n    componentDidMount() { \n        this.createValidArr();\n        this.findPhone();\n    }\n\n\n    handleChange(event, name) {\n        this.setState({ [name]: event.target.value });\n    }\n\n    createValidArr() {\n        var validArr = JSON.parse(JSON.stringify(this.state.fieldDetail))\n        this.state.fieldDetail.map((e, i) => {\n            validArr[i].valid = e.required ? false : true\n        })\n        console.log('map er porer console')\n        this.setState({ fieldDetail: validArr }, () => {\n            console.log('in validarr callback')\n\n        })\n    }\n\n    findPhone() {\n        const obj = this.state.fieldDetail.find((e) => e.key === 'phoneNo')\n        console.log('hghgdhgdhgd *--------> ', obj);\n        if (obj) {\n            console.log('ifffffffffffffffffffff', obj)\n            this.setState({\n                isPhone: true,\n                isPhoneLoading: true\n            })\n            console.log('hghgdhgdhgd *--------> no 2 ', obj);\n            obj.country && this.setCountryCode(obj.country);\n\n        }\n    }\n\n    responseGoogle = (response) => {\n        console.log('Google', response);\n        if (response.tokenId) {\n            this.setState({\n                tokenid: response.tokenId,\n            })\n            this.afterLogin(response.tokenId, 'Google')\n        }\n    }\n\n    responseFacebook = (response) => {\n        console.log('facebook', response);\n        if (response.accessToken) {\n            this.setState({\n                accessToken: response.accessToken,\n                facebookId: response.id,\n            })\n            this.afterLogin(response.accessToken, 'Facebook')\n        }\n    }\n\n\n    toggleDisplay(i) {\n        var copy = JSON.parse(JSON.stringify(this.state.fieldDetail))\n        copy[i].displayIcon = !copy[i].isSecured ? \"fas fa-eye\" : \"fas fa-eye-slash\"\n        copy[i].isSecured = !copy[i].isSecured;\n        this.setState({\n            fieldDetail: copy\n        });\n    }\n\n    afterLogin(data, type) {\n        data = {\n            providers: type,\n            accessToken: data,\n        }\n        this.props.dispatch(SocialLoginAction(data, (response) => {\n            console.log(\"social login response\", response);\n            if (response.user._id) {\n                this.setState({\n                    UserId: response.user._id\n                }, () => {\n                    if (this.state.fieldDetail.find((e) => (e.key === 'phoneNo'))) {\n                        if (!response.user.phoneNo) {\n                            this.props.history.push({ pathname: '/addPhoneNo', state: { userId: response.user._id } })\n                        }\n                        else {\n                            toast.error(\"You are already registered\")\n                        }\n                    }\n                    else {\n                        this.props.history.push(`/loginSignupPage`)\n                    }\n                })\n            }\n        }))\n    }\n\n\n\n    handleOnChange(ele, i, event) {\n        console.log('value, key', event.target.value, ele.key)\n\n        var copyArr = JSON.parse(JSON.stringify(this.state.fieldDetail))\n        var pattern = ele.regex ? new RegExp(ele.regex) : null\n        if (ele.required) {\n            copyArr[i].valid = event.target.value ? true : false\n        }\n        if (pattern) {\n            console.log('pattern', pattern)\n            copyArr[i].isError = event.target.value ? !pattern.test(event.target.value) : false\n        }\n\n        if (ele.key === 'password') {\n            if (this.state.data.confirmPassword) {\n                if (event.target.value !== this.state.data.confirmPassword) {\n                    copyArr[i].matchError = event.target.value && 'Both passwords should be same';\n                } else {\n                    copyArr[i].matchError = null\n                    const idx = copyArr.findIndex(ele => ele.key === 'confirmPassword');\n                    copyArr[idx].matchError = null\n\n                }\n\n            }\n        } else if (ele.key === 'confirmPassword') {\n            if (this.state.data.password) {\n                if (event.target.value !== this.state.data.password) {\n                    copyArr[i].matchError = event.target.value && 'Both passwords should be same'\n                } else {\n                    copyArr[i].matchError = null\n                    const idx = copyArr.findIndex(ele => ele.key === 'password');\n                    copyArr[idx].matchError = null\n                }\n            }\n        } else if (ele.key === 'phoneNo') {\n            this.setState({\n                mobile: { ...this.state.mobile, code: this.state.countryCode ? this.state.countryCode : null, number: event.target.value }\n            }, () => {\n                console.log('mobile save in state', this.state.mobile)\n                this.setState({\n                    fieldDetail: copyArr,\n                    data: { ...this.state.data, [ele.key]: this.state.mobile }\n                })\n            })\n        }\n\n        !(ele.key === 'phoneNo') && this.setState({\n            fieldDetail: copyArr,\n            data: { ...this.state.data, [ele.key]: event.target.value }\n        }, () => console.log('state data', this.state.data))\n\n    }\n\n    onHandleSignUp() {\n        this.props.dispatch(signUpAction(this.state.data, (response) => {\n            console.log('state data, for check no, sign up pg', this.state.data)\n            console.log(\"sign-up consoleeeeeeeeee\", response)\n            if (response.success) {\n                console.log(\"success if\")\n                if (this.state.otp_validation) {\n                    console.log(\" if otp validation\")\n                    if (this.state.data.phoneNo) {\n                        console.log(\" if phone no\")\n                        this.setState({ UserId: response.user._id }, () => {\n                            this.props.history.push({\n                                pathname: '/otpVerification', state: {\n                                    userId: response.user._id, code: this.state.countryCode,\n                                    number: this.state.mobile.number\n                                }\n                            })\n                        })\n\n                    }\n                    else {\n                        if (this.state.urlValidation) {\n                            alert('Verification link is send to your E-mail')\n                            this.props.history.push(`loginSignupPage`);\n                        }\n                        else {\n                            alert('OTP is send to your E-mail')\n                            this.setState({ iseMailOtp: true }, () => {\n                                this.props.history.push({ pathname: '/otpVerification', state: {userId: response.user._id, iseMailOtp: true, mail: this.state.data.email } })\n                            })\n\n                        }\n                    }\n                } else {\n                    console.log(\"no otp validation\")\n                    this.props.history.push(`loginSignupPage`);\n                }\n            }\n        }));\n    };\n\n    setCountryCode(country) {\n        const obj = CountryList.find((e) => {\n            if (e.name.toLowerCase().split(' ')[0] === country.toLowerCase()) {\n                console.log('matched nameeeeeeeeeeeeeeeee', e.name)\n                return true\n            }\n        });\n        console.log(\"countrylist eeeeeeeeeee check kr e... aseni\", obj, country)\n\n        if (obj) {\n            console.log('objjjjjjjjj', obj)\n            this.setState({\n                countryCode: obj.dialCode,\n                isPhoneLoading: false\n            })\n        }\n    }\n\n    validate() {\n        if (this.state.fieldDetail.find((e) => (!e.valid || e.isError))) {\n            return false\n        } else {\n            return true\n        }\n    }\n\n\n\n\n\n    countryCodeHandler() {\n        this.setState({ PhoneNoCode: !this.state.PhoneNoCode })\n\n    }\n\n    \n    phoneNoCodeSearch(e){\n        this.setState({\n            phoneNoCodeSearch: e.target.value\n        })\n\n    }\n\n    componentWillReceiveProps(props) {\n        this.setState({ signUpLoading: props.LoginReducer.signUpLoading });\n      }\n\n\n    render() {\n\n        let inputSection = this.state.fieldDetail && this.state.fieldDetail.map((ele, i) =>\n            <div>\n                {(ele.key !== 'phoneNo') ?\n                    <>\n                        <div className='inputBlock'>\n                            <div className='d-flex flex-row textInput text'>\n                                <div>\n                                    <i class={ele.icon}></i>\n                                </div>\n                                <MaterialInput\n                                    className={ele.showable ? 'd-flex flex-grow-1 pl-3' : \"textInput text pl-3\"}\n                                    type={ele.isSecured ? 'password' : ele.type}\n                                    content={ele.placeHolder}\n                                    onChange={(event) => this.handleOnChange(ele, i, event)}\n                                />\n                                {ele.showable &&\n                                    <Button color='' onClick={() => this.toggleDisplay(i)}>\n                                        <i class={ele.displayIcon ? ele.displayIcon : \"fas fa-eye\"}></i>\n                                    </Button>}\n                            </div>\n                            {ele.matchError ?\n                                <span className=\"position-absolute invalidEmail text pl-3 pr-3\">{ele.matchError}</span>\n                                :\n                                ele.isError && <span className=\"position-absolute invalidEmail text pl-3 pr-3\">{ele.regxMsg ? ele.regxMsg : 'Invalid input'}</span>}\n                        </div>\n\n\n                    </>\n                    :\n                    <>\n                        <>\n\n                            <div className='position-relative'>\n                                <div className='inputBlock'>\n                                    <div className='d-flex flex-row textInput text'>\n                                        <span className='phoneNumberCode text '>\n                                            <Button className='p-0' color='' onClick={() => this.countryCodeHandler()}>\n                                                <i class={this.state.PhoneNoCode ? \"fa fa-caret-up\" : \"fa fa-caret-down\"}></i>\n                                                <span className=\"textInput text ml-2\">{this.state.countryCode ? this.state.countryCode : null}</span>\n                                            </Button>\n                                        </span>\n                                        <MaterialInput\n                                            className=\"textInput d-flex flex-grow-1 text ml-3\"\n                                            contentClass='pl-5 w-100'\n                                            inputClass={'pl-5'}\n                                            type={ele.type}\n                                            content={ele.placeHolder}\n                                            onChange={(event) => this.handleOnChange(ele, i, event)}\n                                        />\n                                    </div>\n                                    {ele.isError && <span className=\"position-absolute invalidEmail text pl-3\">{ele.regxMsg ? ele.regxMsg : 'Invalid input'}</span>}\n                                </div>\n                                {this.state.PhoneNoCode &&\n                                    <div className='phoneCodeList'>\n                                        <input placeholder='Search for country' className='phoneNoCodeSearch' onChange={(event) => this.phoneNoCodeSearch(event)} />\n                                        {this.state.phoneNoCodeSearch ?\n                                            <div className='phoneCodeListScroll'>\n                                                {CountryList.length && CountryList && CountryList.filter(e => e.name.toLowerCase().includes(this.state.phoneNoCodeSearch)).map((ele, i) =>\n                                                    <div key={i} >\n                                                        <Button className='phoneCode' color='' onClick={() => this.setState({ countryCode: ele.dialCode, PhoneNoCode: false, phoneNoCodeSearch: null })}>\n                                                            {ele.name}\n                                                        </Button>\n                                                    </div>\n                                                )}\n                                            </div> :\n                                            <div className='phoneCodeListScroll'>\n                                                {CountryList.map((ele, i) =>\n                                                    <div key={i} >\n                                                        <Button className='phoneCode' color='' onClick={() => this.setState({ countryCode: ele.dialCode, PhoneNoCode: false })}>\n                                                            {ele.name}\n                                                        </Button>\n                                                    </div>\n                                                )}\n                                            </div>}\n                                    </div>\n                                }\n\n\n                            </div>\n\n\n                        </>\n                    </>\n                }\n            </div>)\n\n        return (\n            <div className='w-100 mb-3'>\n                {this.state.fieldDetail && this.state.buttonDetail && <div>\n                    <Container>\n                        <div>\n                            <div>\n                                {inputSection}\n                            </div>\n\n\n\n                            <div className=\" mt-5 pb-5\">\n                                <Button disabled={!this.validate()} style={{ borderRadius: this.state.buttonDetail.borderRadis, backgroundColor: this.state.buttonDetail.btnClr, borderWidth: 3, borderColor: 'white', width: '100%', height: '55px' }} onClick={() => this.onHandleSignUp()}\n                                >{!this.state.signUpLoading ? <strong color={this.state.buttonDetail.btntxtClr}>{this.state.buttonDetail.btnTxt}</strong>\n                                : <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>}\n                                    </Button>\n                            </div>\n                        </div>\n\n                        <div>\n                            <GoogleLogin\n                                clientId={Google_Client_Id}\n                                render={renderProps => (\n                                    <Button color='' className=\"mb-3\" onClick={() => renderProps.onClick()}\n                                        style={{ backgroundColor: '#dc4040', borderRadius: this.state.buttonDetail.borderRadis, alignItems: 'center', height: '50px', justifyContent: 'center', alignSelf: 'center', flexDirection: 'row', width: '100%' }}>\n                                        <img src={require('../assets/google-logo.png')} className='buttonImage' />\n                                        <span className=\"text buttonText textBold\">Sign Up With Google</span>\n                                    </Button>\n                                )}\n                                buttonText=\"Login\"\n                                onSuccess={this.responseGoogle}\n                                onFailure={this.responseGoogle}\n                                cookiePolicy={'single_host_origin'}\n                            />\n                        </div>\n                        <div sm=\"2\" className='d-flex justify-content-center align-items-center'>\n                            OR\n                        </div>\n                        <div>\n                            <FacebookLogin\n                                appId={Facebook_Id}\n                                callback={this.responseFacebook}\n                                render={renderProps => (\n                                    <Button color='' className=\"mt-3\" onClick={() => renderProps.onClick()}\n                                        style={{ borderRadius: this.state.buttonDetail.borderRadis, backgroundColor: 'rgb(2, 2, 238)', alignItems: 'center', height: '50px', justifyContent: 'center', flexDirection: 'row', width: '100%' }}>\n                                        <img src={require('../assets/facebook-logo.png')}\n                                            className='buttonImage' />\n                                        <span className=\"text buttonText textBold\">Sign Up With Facebook</span>\n                                    </Button>\n                                )}\n                            />\n\n                        </div>\n\n\n                    </Container>\n\n\n                </div>}\n            </div>\n\n\n        );\n    }\n}\n\nconst mapStateToProps = state => state;\nexport default connect(mapStateToProps)(SignUp);","/home/aponiar/Desktop/raju-react-redux-starter/src/actions/PasswordAction.js",[],"/home/aponiar/Desktop/raju-react-redux-starter/src/api-services/axios.service.js",[],"/home/aponiar/Desktop/raju-react-redux-starter/src/api-services/EndPoint.js",[],"/home/aponiar/Desktop/raju-react-redux-starter/src/store.js",[],"/home/aponiar/Desktop/raju-react-redux-starter/src/saga/watcher.js",["223","224","225","226"],"import { takeLatest, takeEvery } from 'redux-saga/effects';\nimport * as types from '../actions/types';\n\nexport const actionArr = []\nlet actionLength = 0;\nexport function* watchActions() {\n  // Declare every saga here with the action type\n  // Ex:  yield takeLatest(types.ACTION_TYPE, sagaGeneratorFunction);\n  if (actionArr.length && actionLength != actionArr.length) {\n    actionLength = actionArr.length;\n  let lastIndex = actionArr.length - 1;\n  yield takeEvery(actionArr[lastIndex].actionType, actionArr[lastIndex].sagaFunc)\n  }\n  for(let i in actionArr) {\n    //yield cancel(actionArr[i].actionType);\n    //yield delay(500)\n    //yield takeEvery(actionArr[i].actionType, actionArr[i].sagaFunc)\n  }\n}\n\n\n\n\n","/home/aponiar/Desktop/raju-react-redux-starter/src/saga/index.js",[],"/home/aponiar/Desktop/raju-react-redux-starter/src/api-services/OtpVerificationApi.js",[],"/home/aponiar/Desktop/raju-react-redux-starter/src/api-services/AddPhoneNoApi.js",[],"/home/aponiar/Desktop/raju-react-redux-starter/src/actions/SocialLoginAction.js",[],"/home/aponiar/Desktop/raju-react-redux-starter/src/actions/LoginAction.js",[],"/home/aponiar/Desktop/raju-react-redux-starter/src/api-services/PasswordApi.js",[],"/home/aponiar/Desktop/raju-react-redux-starter/src/reducers/index.js",[],"/home/aponiar/Desktop/raju-react-redux-starter/src/api-services/SocialLoginApi.js",[],"/home/aponiar/Desktop/raju-react-redux-starter/src/api-services/LoginApi.js",[],"/home/aponiar/Desktop/raju-react-redux-starter/src/reducers/SocialLoginReducer.js",["227"],"import * as types from '../actions/types';\n\nconst SocialLoginReducer = function(state = [], action) {\n    const response = action.response;\n    console.log('in default', action.type)\n    switch(action.type) {\n        case types.SOCIAL_LOGIN_ACTION: \n            console.log('in action start');\n            return {...state, SocialLoginLoading: true};\n        case types.SOCIAL_LOGIN_ACTION + '_SUCCESS':\n            console.log('in action success', action)\n            return {...state, SocialLoginData: action.response, SocialLoginLoading: false}\n        case types.SOCIAL_LOGIN_ACTION + '_ERROR':\n            return {...state, SocialLoginErr: action.error, SocialLoginLoading: undefined}\n        default:\n            return state;\n    }\n}\n\nexport default SocialLoginReducer;",["228","229"],"/home/aponiar/Desktop/raju-react-redux-starter/src/reducers/AddPhoneNoReducer.js",["230"],"import * as types from '../actions/types';\n\nconst AddPhoneNoReducer = function(state = [], action) {\n    const response = action.response;\n    console.log('in default', action.type)\n    switch(action.type) {\n        case types.SOCIAL_LOGIN_ACTION: \n            console.log('in action start');\n            return {...state, AddPhoneNoLoading: true};\n        case types.SOCIAL_LOGIN_ACTION + '_SUCCESS':\n            console.log('in action success', action)\n            return {...state, AddPhoneNoData: action.response, AddPhoneNoLoading: false}\n        case types.SOCIAL_LOGIN_ACTION + '_ERROR':\n            return {...state, AddPhoneNoErr: action.error, AddPhoneNoLoading: undefined}\n        default:\n            return state;\n    }\n}\n\nexport default AddPhoneNoReducer;","/home/aponiar/Desktop/raju-react-redux-starter/src/reducers/GetConfigurationReducer.js",["231"],"import * as types from '../actions/types';\n\nconst GetConfigurationReducer = function(state = [], action) {\n    const response = action.response;\n    console.log('in default', action.type)\n    switch(action.type) {\n        case types.GET_CONFIGURATION_ACTION: \n            console.log('in action start');\n            return {...state, configLoading: true};\n        case types.GET_CONFIGURATION_ACTION + '_SUCCESS':\n            console.log('in action success', action)\n            return {...state, configData: action.response, configLoading: false}\n        case types.GET_CONFIGURATION_ACTION + '_ERROR':\n            return {...state, configErr: action.error, configLoading: undefined}\n        default:\n            return state;\n    }\n}\n\nexport default GetConfigurationReducer;","/home/aponiar/Desktop/raju-react-redux-starter/src/reducers/OtpVerificationReducer.js",["232"],"import * as types from '../actions/types';\n\nconst OtpVerificationReducer = function (state = [], action) {\n    const response = action.response;\n    console.log('in default', action)\n    switch (action.type) {\n        case types.OTP_VERIFICATION_ACTION:\n            console.log('in action start');\n            return { ...state, OtpVerificationLoading: true };\n        case types.OTP_VERIFICATION_ACTION + '_SUCCESS':\n            console.log('in action success', action)\n            return { ...state, OtpVerificationData: action.response, OtpVerificationLoading: false }\n        case types.OTP_VERIFICATION_ACTION + '_ERROR':\n            return { ...state, OtpVerificationErr: action.error.statusText, OtpVerificationLoading: undefined }\n\n        case types.RESEND_OTP_ACTION:\n            console.log('in action start');\n            return { ...state, ResendOtpLoading: true };\n        case types.RESEND_OTP_ACTION + '_SUCCESS':\n            console.log('in action success', action)\n            return { ...state, ResendOtpData: action.response, ResendOtpLoading: false }\n        case types.RESEND_OTP_ACTION + '_ERROR':\n            return { ...state, ResendOtpErr: action.error, ResendOtpLoading: undefined }\n\n        default:\n            console.log('default return');\n            \n            return state;\n    }\n}\n\nexport default OtpVerificationReducer;","/home/aponiar/Desktop/raju-react-redux-starter/src/reducers/GetProfileReducer.js",["233"],"import * as types from '../actions/types';\n\nconst GetProfileReducer = function(state = [], action) {\n    const response = action.response;\n    console.log('in default', action.type)\n    switch(action.type) {\n        case types.GET_PROFILE_ACTION: \n            console.log('in action start');\n            return {...state, GetProfileLoading: true};\n        case types.GET_PROFILE_ACTION + '_SUCCESS':\n            console.log('in action success', action)\n            return {...state, GetProfileData: action.response, GetProfileLoading: false}\n        case types.GET_PROFILE_ACTION + '_ERROR':\n            return {...state, GetProfileErr: action.error, GetProfileLoading: undefined}\n        case types.EDIT_PROFILE_ACTION: \n            console.log('in edit profile action start');\n            return {...state, EditProfileLoading: true};\n        case types.EDIT_PROFILE_ACTION + '_SUCCESS':\n            console.log('in edit profile action success', action)\n            return {...state, EditProfileData: action.response, EditProfileLoading: false}\n        case types.EDIT_PROFILE_ACTION + '_ERROR':\n            console.log('in edit profile action error', action)\n            return {...state, EditProfileErr: action.error, EditProfileLoading: undefined}            \n        default:\n            return state;\n    }\n}\n\nexport default GetProfileReducer;","/home/aponiar/Desktop/raju-react-redux-starter/src/reducers/LogoutReducer.js",["234"],"import * as types from '../actions/types';\n\nconst LogoutReducer = function(state = [], action) {\n    const response = action.response;\n    console.log('in default', action.type)\n    switch(action.type) {\n        case types.LOGOUT_ACTION: \n            console.log('in action start');\n            return {...state, LogoutLoading: true};\n        case types.LOGOUT_ACTION + '_SUCCESS':\n            console.log('in action success', action)\n            return {...state, LogoutData: action.response, LogoutLoading: false}\n        case types.LOGOUT_ACTION + '_ERROR':\n            return {...state, LogoutErr: action.error, LogoutLoading: undefined}\n        default:\n            return state;\n    }\n}\n\nexport default LogoutReducer;","/home/aponiar/Desktop/raju-react-redux-starter/src/reducers/PasswordReducer.js",["235"],"import * as types from '../actions/types';\n\nconst PasswordReducer = function (state = [], action) {\n    const response = action.response;\n    console.log('in default', action.type)\n    switch (action.type) {\n\n        case types.EMAIL_VERIFICATION_ACTION:\n            console.log('in action start');\n            return { ...state, EmailVerifyLoading: true };\n        case types.EMAIL_VERIFICATION_ACTION + '_SUCCESS':\n            console.log('in action success', action)\n            return { ...state, EmailVerifyData: action.response, EmailVerifyLoading: false }\n        case types.EMAIL_VERIFICATION_ACTION + '_ERROR':\n            return { ...state, EmailVerifyErr: action.error, EmailVerifyLoading: undefined }\n\n\n        case types.FORGET_PASSWORD_ACTION:\n            console.log('in action start');\n            return { ...state, ForgetPasswordLoading: true };\n        case types.FORGET_PASSWORD_ACTION + '_SUCCESS':\n            console.log('in action success', action)\n            return { ...state, ForgetPasswordData: action.response, ForgetPasswordLoading: false }\n        case types.FORGET_PASSWORD_ACTION + '_ERROR':\n            return { ...state, ForgetPasswordErr: action.error, ForgetPasswordLoading: undefined }\n\n\n        case types.RESET_PASSWORD_ACTION:\n            console.log('in action start');\n            return { ...state, ResetPasswordLoading: true };\n        case types.RESET_PASSWORD_ACTION + '_SUCCESS':\n            console.log('in action success', action)\n            return { ...state, ResetPasswordData: action.response, ResetPasswordLoading: false }\n        case types.RESET_PASSWORD_ACTION + '_ERROR':\n            return { ...state, ResetPasswordErr: action.error, ResetPasswordLoading: undefined }\n\n\n        default:\n            return state;\n    }\n}\n\nexport default PasswordReducer;","/home/aponiar/Desktop/raju-react-redux-starter/src/reducers/LoginReducer.js",["236"],"import * as types from '../actions/types';\n\nconst LoginReducer = function(state = [], action) {\n    const response = action.response;\n    console.log('in default', action.type)\n    switch(action.type) {\n        case types.SIGN_UP_ACTION: \n            console.log('in action start');\n            return {...state, signUpLoading: true};\n        case types.SIGN_UP_ACTION + '_SUCCESS':\n            console.log('in action success', action)\n            return {...state, signUpData: action.response, signUpLoading: false}\n        case types.SIGN_UP_ACTION + '_ERROR':\n            return {...state, signUpErr: action.error, signUpLoading: undefined}\n        case types.LOGIN_ACTION: \n            console.log('in action start');\n            return {...state, loginLoading: true};\n        case types.LOGIN_ACTION + '_SUCCESS':\n            console.log('in action success', action)\n            return {...state, loginData: action.response, loginLoading: false}\n        case types.LOGIN_ACTION + '_ERROR':\n            return {...state, loginErr: action.error, loginLoading: undefined}            \n        default:\n            return state;\n    }\n}\n\nexport default LoginReducer;","/home/aponiar/Desktop/raju-react-redux-starter/src/components/materialInput.js",[],"/home/aponiar/Desktop/raju-react-redux-starter/src/components/header.js",["237","238","239","240","241"],"import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Row, Col, Button } from 'reactstrap';\nimport '../App.scss';\nimport { LogoutAction } from './../actions/LogoutAction';\nimport { connect } from 'react-redux';\n\nconst user = require(\"./../assets/useImage.png\");\nconst logo = require(\"./../assets/logo.png\");\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        console.log('header constructor', props)\n        this.state = {\n            isMenuOpen: false,\n            UserId: localStorage.getItem('UserId'),\n            // brandDetail: props.GetConfigurationReducer.configData.appConfig.brandSection\n        };\n    }\n\n\n    menuHandle() {\n        this.setState({\n            isMenuOpen: !this.state.isMenuOpen\n        })\n    }\n\n    logOut() {\n        let data = {\n            _id: this.state.UserId\n        }\n        this.props.dispatch(LogoutAction(data, (response) => {\n            console.log('logout', response)\n            if (response.loginType === 'Facebook' || response.loginType === 'Google') {\n                if (response.loginType === 'Facebook') {\n                    //   LoginManager.logOut();\n                    this.clearStorage()\n                }\n                else {\n                    this.clearStorage()\n                }\n            }\n            else {\n                this.clearStorage()\n            }\n        }))\n    }\n    clearStorage() {\n        localStorage.clear();\n        this.props.history.push(`/loginSignupPage`)\n    }\n\n\n    render() {\n        return (\n\n            <Navbar color=\"primary\" fixed='top' style={{ height: '80px', boxShadow: 'none', display: 'flex', flexDirection: 'row' }}>\n                <div style={{ display: 'flex', flexDirection: 'row', width: '100%' }}>\n                    <div style={{ display: 'flex', flexDirection: 'row', flex: 1 }}>\n                        <div className='companyIconDesign'><img style={{ height: '30px', width: '30px' }} src={logo} /></div>\n                        <div className='mt-3'>\n                            <div className='logoText textBold'>{this.props.brandName.name} </div>\n                            {this.props.brandName.isTag &&\n                                <div className='tag'>{this.props.brandName.tagLine}</div>\n                            }\n                        </div>\n                    </div>\n                    <div>\n                        {this.props.profImg ? <Button style={{ borderRadius: '100%', height: '25px', width: '25px', border: 'unset', backgroundColor: 'unset', alignItems: 'center', justifyContent: 'center', margin:'15px' }} onClick={() => this.menuHandle()}>\n                            <img style={{ borderRadius: '100%', height: '25px', width: '25px', borderWidth: 1, alignItems: 'center', justifyContent: 'center' }} src={(localStorage.getItem('profImg')!=='null') ? localStorage.getItem('profImg') : user} />\n                            {\n                                this.state.isMenuOpen ?\n                                    <div>\n                                        <ul className='dropdownDesign'>\n                                            <li className='fullWidth'><Button className=\"transparentButton listOptionDesign fullWidth\" onClick={() => this.props.history.push(`/dashboard`)}>Dashboard</Button></li>\n                                            <li className='fullWidth'><Button className=\"transparentButton listOptionDesign fullWidth\" onClick={() => this.props.history.push(`/editProfile`)}>Edit Profile</Button></li>\n                                            {localStorage.getItem('socialID') ? console.log('') :\n                                                <li className='fullWidth'><Button className=\"transparentButton listOptionDesign fullWidth\" onClick={() => this.props.history.push(`/ResetPassword`)}>Change Password</Button></li>}\n                                            <li className='fullWidth'><Button className=\"transparentButton listOptionDesign fullWidth\" onClick={() => this.logOut()}>Logout</Button></li>\n                                        </ul>\n                                    </div>\n                                    :\n                                    null\n                            }\n                        </Button> : null}\n                    </div>\n                </div>\n            </Navbar>\n\n        );\n\n    }\n}\n\nconst mapStateToProps = state => state;\nexport default connect(mapStateToProps)(Header);\n\n","/home/aponiar/Desktop/raju-react-redux-starter/src/actions/LogoutAction.js",[],"/home/aponiar/Desktop/raju-react-redux-starter/src/actions/GetProfileAction.js",[],"/home/aponiar/Desktop/raju-react-redux-starter/src/api-services/LogoutApi.js",[],"/home/aponiar/Desktop/raju-react-redux-starter/src/api-services/GetProfileApi.js",[],"/home/aponiar/Desktop/raju-react-redux-starter/src/constant.js",[],{"ruleId":"242","severity":1,"message":"243","line":10,"column":8,"nodeType":"244","messageId":"245","endLine":10,"endColumn":16},{"ruleId":"246","severity":1,"message":"247","line":33,"column":5,"nodeType":"248","messageId":"249","endLine":33,"endColumn":47},{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","replacedBy":"253"},{"ruleId":"242","severity":1,"message":"254","line":2,"column":31,"nodeType":"244","messageId":"245","endLine":2,"endColumn":37},{"ruleId":"242","severity":1,"message":"255","line":2,"column":39,"nodeType":"244","messageId":"245","endLine":2,"endColumn":44},{"ruleId":"242","severity":1,"message":"256","line":2,"column":46,"nodeType":"244","messageId":"245","endLine":2,"endColumn":50},{"ruleId":"242","severity":1,"message":"257","line":2,"column":52,"nodeType":"244","messageId":"245","endLine":2,"endColumn":61},{"ruleId":"242","severity":1,"message":"258","line":2,"column":63,"nodeType":"244","messageId":"245","endLine":2,"endColumn":75},{"ruleId":"242","severity":1,"message":"259","line":2,"column":77,"nodeType":"244","messageId":"245","endLine":2,"endColumn":85},{"ruleId":"242","severity":1,"message":"260","line":1,"column":10,"nodeType":"244","messageId":"245","endLine":1,"endColumn":13},{"ruleId":"242","severity":1,"message":"261","line":1,"column":15,"nodeType":"244","messageId":"245","endLine":1,"endColumn":25},{"ruleId":"242","severity":1,"message":"262","line":3,"column":10,"nodeType":"244","messageId":"245","endLine":3,"endColumn":24},{"ruleId":"250","replacedBy":"263"},{"ruleId":"252","replacedBy":"264"},{"ruleId":"242","severity":1,"message":"265","line":2,"column":21,"nodeType":"244","messageId":"245","endLine":2,"endColumn":24},{"ruleId":"242","severity":1,"message":"266","line":2,"column":26,"nodeType":"244","messageId":"245","endLine":2,"endColumn":29},{"ruleId":"242","severity":1,"message":"255","line":2,"column":39,"nodeType":"244","messageId":"245","endLine":2,"endColumn":44},{"ruleId":"267","severity":1,"message":"268","line":127,"column":9,"nodeType":"269","endLine":127,"endColumn":19},{"ruleId":"267","severity":1,"message":"268","line":130,"column":9,"nodeType":"269","endLine":130,"endColumn":19},{"ruleId":"267","severity":1,"message":"268","line":134,"column":9,"nodeType":"269","endLine":134,"endColumn":19},{"ruleId":"267","severity":1,"message":"268","line":137,"column":9,"nodeType":"269","endLine":137,"endColumn":19},{"ruleId":"270","severity":1,"message":"271","line":253,"column":46,"nodeType":"272","endLine":253,"endColumn":132},{"ruleId":"273","severity":1,"message":"274","line":253,"column":72,"nodeType":"275","messageId":"276","endLine":253,"endColumn":93},{"ruleId":"277","severity":1,"message":"278","line":270,"column":25,"nodeType":"272","endLine":270,"endColumn":99},{"ruleId":"277","severity":1,"message":"278","line":290,"column":25,"nodeType":"272","endLine":291,"endColumn":53},{"ruleId":"242","severity":1,"message":"265","line":2,"column":21,"nodeType":"244","messageId":"245","endLine":2,"endColumn":24},{"ruleId":"242","severity":1,"message":"266","line":2,"column":26,"nodeType":"244","messageId":"245","endLine":2,"endColumn":29},{"ruleId":"242","severity":1,"message":"255","line":2,"column":39,"nodeType":"244","messageId":"245","endLine":2,"endColumn":44},{"ruleId":"242","severity":1,"message":"279","line":9,"column":8,"nodeType":"244","messageId":"245","endLine":9,"endColumn":12},{"ruleId":"242","severity":1,"message":"280","line":13,"column":10,"nodeType":"244","messageId":"245","endLine":13,"endColumn":31},{"ruleId":"281","severity":1,"message":"282","line":55,"column":43,"nodeType":"283","messageId":"284","endLine":55,"endColumn":45},{"ruleId":"281","severity":1,"message":"285","line":236,"column":42,"nodeType":"283","messageId":"286","endLine":236,"endColumn":44},{"ruleId":"277","severity":1,"message":"278","line":396,"column":41,"nodeType":"272","endLine":396,"endColumn":115},{"ruleId":"277","severity":1,"message":"278","line":416,"column":41,"nodeType":"272","endLine":417,"endColumn":71},{"ruleId":"242","severity":1,"message":"287","line":1,"column":10,"nodeType":"244","messageId":"245","endLine":1,"endColumn":20},{"ruleId":"242","severity":1,"message":"288","line":2,"column":13,"nodeType":"244","messageId":"245","endLine":2,"endColumn":18},{"ruleId":"289","severity":1,"message":"290","line":9,"column":40,"nodeType":"291","messageId":"292","endLine":9,"endColumn":42},{"ruleId":"242","severity":1,"message":"293","line":14,"column":11,"nodeType":"244","messageId":"245","endLine":14,"endColumn":12},{"ruleId":"242","severity":1,"message":"294","line":4,"column":11,"nodeType":"244","messageId":"245","endLine":4,"endColumn":19},{"ruleId":"250","replacedBy":"295"},{"ruleId":"252","replacedBy":"296"},{"ruleId":"242","severity":1,"message":"294","line":4,"column":11,"nodeType":"244","messageId":"245","endLine":4,"endColumn":19},{"ruleId":"242","severity":1,"message":"294","line":4,"column":11,"nodeType":"244","messageId":"245","endLine":4,"endColumn":19},{"ruleId":"242","severity":1,"message":"294","line":4,"column":11,"nodeType":"244","messageId":"245","endLine":4,"endColumn":19},{"ruleId":"242","severity":1,"message":"294","line":4,"column":11,"nodeType":"244","messageId":"245","endLine":4,"endColumn":19},{"ruleId":"242","severity":1,"message":"294","line":4,"column":11,"nodeType":"244","messageId":"245","endLine":4,"endColumn":19},{"ruleId":"242","severity":1,"message":"294","line":4,"column":11,"nodeType":"244","messageId":"245","endLine":4,"endColumn":19},{"ruleId":"242","severity":1,"message":"294","line":4,"column":11,"nodeType":"244","messageId":"245","endLine":4,"endColumn":19},{"ruleId":"242","severity":1,"message":"297","line":2,"column":18,"nodeType":"244","messageId":"245","endLine":2,"endColumn":29},{"ruleId":"242","severity":1,"message":"265","line":2,"column":31,"nodeType":"244","messageId":"245","endLine":2,"endColumn":34},{"ruleId":"242","severity":1,"message":"266","line":2,"column":36,"nodeType":"244","messageId":"245","endLine":2,"endColumn":39},{"ruleId":"277","severity":1,"message":"278","line":59,"column":60,"nodeType":"272","endLine":59,"endColumn":120},{"ruleId":"277","severity":1,"message":"278","line":69,"column":29,"nodeType":"272","endLine":69,"endColumn":254},"no-unused-vars","'rootSaga' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-native-reassign",["298"],"no-negated-in-lhs",["299"],"'Button' is defined but never used.","'Input' is defined but never used.","'Card' is defined but never used.","'CardTitle' is defined but never used.","'CardSubtitle' is defined but never used.","'CardBody' is defined but never used.","'put' is defined but never used.","'putResolve' is defined but never used.","'sagaMiddleware' is defined but never used.",["298"],["299"],"'Row' is defined but never used.","'Col' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'swal' is defined but never used.","'OtpVerificationAction' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.find() expects a value to be returned at the end of arrow function.","expectedAtEnd","'takeLatest' is defined but never used.","'types' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'i' is assigned a value but never used.","'response' is assigned a value but never used.",["298"],["299"],"'NavbarBrand' is defined but never used.","no-global-assign","no-unsafe-negation"]